plugins {
    id 'java'
    id 'idea'
    id 'maven-publish'
    id 'fabric-loom' version '0.2.6-SNAPSHOT'
    id 'com.github.ben-manes.versions' version '0.27.0'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
    id 'com.matthewprenger.cursegradle' version '1.4.0'
    id 'org.jetbrains.kotlin.jvm' version '1.3.60'
    id 'org.shipkit.java' version '2.2.5'
}

configurations {
    modShaded
    modCompile.extendsFrom modShaded
}

repositories {
    maven {
        url = 'http://maven.fabricmc.net/'
        name = 'Fabric'
    }
    maven { url = 'https://dl.bintray.com/magneticflux/maven' }
    maven {
        url = 'https://minecraft.curseforge.com/api/maven'
        name = 'CurseForge'
    }
    maven { url = 'https://dl.bintray.com/shedaniel/autoconfig1u/' }
    jcenter()
}

// Enable Java 8 language features
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
compileKotlin.kotlinOptions.jvmTarget = '1.8'
compileTestKotlin.kotlinOptions.jvmTarget = '1.8'

archivesBaseName = project.archives_base_name
group = project.maven_group

minecraft {
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modCompile "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modCompile "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modCompile 'net.fabricmc:fabric-language-kotlin:1.3.60+build.1'
    include 'net.fabricmc:fabric-language-kotlin:1.3.60+build.1'

    modCompile 'io.github.prospector:modmenu:1.7.15.1.14.4+build.127'

    modCompile 'me.shedaniel.cloth:config-2:1.8'
    include 'me.shedaniel.cloth:config-2:1.8'

    modCompile 'me.sargunvohra.mcmods:autoconfig1u:1.2.3'
    include 'me.sargunvohra.mcmods:autoconfig1u:1.2.3'

    modShaded('com.skaggsm:java-mumble-link:0.2.4') {
        exclude group: 'net.java.dev.jna'
    }
}

processResources {
    inputs.properties 'version': project.version,
            'archives_base_name': project.archives_base_name

    from(sourceSets.main.resources.srcDirs) {
        include 'fabric.mod.json'
        expand 'version': project.version,
                'archives_base_name': project.archives_base_name
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the 'build' task
// if it is present.
// If you remove this task, sources will not be generated.

// Tasks generated by ShipKit
/*
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

jar {
    from 'LICENSE'
}
*/

shadowJar {
    configurations = [project.configurations.modShaded]
    relocate 'com.skaggsm.jmumblelink', 'com.skaggsm.mumblelinkmod.shaded.jmumblelink'
    relocate 'com.skaggsm.sharedmemory', 'com.skaggsm.mumblelinkmod.shaded.sharedmemory'
}

remapJar {
    dependsOn shadowJar
    input = shadowJar.archiveFile
}

// Remove the ShipKit publication and recreate it with Fabric artifacts
publishing.publications.getByName('javaLibrary') {
    println((delegate as MavenPublication).artifacts)
    delegate.artifacts = [remapJar, sourcesJar]
    println((delegate as MavenPublication).artifacts)
}

curseforge {
    // Stored in ~/.gradle/gradle.properties
    if (project.hasProperty('curseApiKey'))
        apiKey = project.curseApiKey
    else if (System.getenv('CURSE_API_KEY') != null)
        apiKey = System.getenv('CURSE_API_KEY')
    else
        println 'No CurseForge API key found, \'curseforge\' tasks will not work'

    project {
        id = project.curseforge_id
        releaseType = 'release'
        addGameVersion "$project.minecraft_version" // Change to 1.14.4 when CurseForge adds it
        mainArtifact(remapJar) {
            displayName = "$archives_base_name-$project.version [$project.minecraft_version]"
            relations {
                requiredDependency 'fabric-api'
                embeddedLibrary 'fabric-language-kotlin'
            }
        }
        addArtifact sourcesJar
    }
    options {
        forgeGradleIntegration = false
    }
}

afterEvaluate {
    // CurseGradle generates tasks in afterEvaluate for each project
    // There isn't really any other way to make it depend on a task unless it is an AbstractArchiveTask
    def curseforgeTask = tasks.getByName("curseforge${project.curseforge_id}")
    curseforgeTask.dependsOn publish
    curseforgeTask.dependsOn remapJar
    tasks.getByName('bintrayPublish').dependsOn curseforgeTask
}
